# https://github.com/peripheryapp/periphery/blob/master/.github/workflows/test.yml

name: Test
on:
  push:
    branches:
      - master
  pull_request: {}
env:
  swift_package_resolve: swift package resolve
  swift_build: swift build --build-tests
  swift_test: swift test
jobs:
  macOS:
    strategy:
      fail-fast: false
      matrix:
        xcode: ["16.2", "16.1", "16.0", "15.4"]
        include:
          - xcode: "16.2"
            macos: macos-15
          - xcode: "16.1"
            macos: macos-15
          - xcode: "16.0"
            macos: macos-15
          - xcode: "15.4"
            macos: macos-14
    runs-on: ${{ matrix.macos }}
    name: macOS
    steps:
    - uses: actions/checkout@master
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_${{ matrix.xcode }}.app; swift -version
    - name: Get Swift Version
      id: get-swift-version
      run: |
          echo "::set-output name=version::$(swift -version | head -n 1 | sed s/,// )"
      shell: bash
    - name: Cache resolved dependencies
      id: cache-resolved-dependencies
      uses: actions/cache@v4
      with:
        path: |
          .build
          Package.resolved
        key: ${{ runner.os }}-${{ matrix.xcode }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-${{ hashFiles('Package.swift', 'Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.xcode }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-
    - name: Resolve dependencies
      if: steps.cache-resolved-dependencies.outputs.cache-hit != 'true'
      run: ${{ env.swift_package_resolve }}
    - name: Install netcdf
      run: brew install netcdf
    - name: Build
      run: ${{ env.swift_build }}
    - name: Test
      run: ${{ env.swift_test }}
  linux:
    strategy:
      fail-fast: false
      matrix:
        swift: ["6.0", "5.10"]
        include:
          - swift: "6.0"
            container: "swift:6.0"
          - swift: "5.10"
            container: "swift:5.10"
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    name: Linux
    steps:
    - name: Get Swift Version
      id: get-swift-version
      run: |
        echo "::set-output name=version::$(swift -version | head -n 1 | sed s/,// )"
      shell: bash
    - uses: actions/checkout@master
    - name: Cache resolved dependencies
      id: cache-resolved-dependencies
      uses: actions/cache@v4
      with:
        path: |
          .build
          Package.resolved
        key: ${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-${{ hashFiles('Package.swift', 'Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-spm-deps-
    - name: Install netcdf
      run: apt-get update && apt-get -qq -y install libnetcdf-dev
    - name: Resolve dependencies
      if: steps.cache-resolved-dependencies.outputs.cache-hit != 'true'
      run: ${{ env.swift_package_resolve }}
    - name: Build
      run: ${{ env.swift_build }} --enable-test-discovery
    - name: Test
      run: ${{ env.swift_test }} --enable-test-discovery